{"version":3,"sources":["logo.svg","components/search.component.js","components/saved.component.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","SearchComponent","dbQuery","$","ajax","method","url","data","name","then","res","console","log","this","react_default","a","createElement","Component","SavedComponent","App","react_router_dom","className","class","href","target","src","logo","width","height","alt","to","react_router","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,gQC8BzBC,6MAtBXC,QAAU,WACNC,EAAEC,KAAK,CACHC,OAAQ,OACRC,IAAK,iBACLC,KAAM,CACFC,KAAM,UAGTC,KAAK,SAASC,GACXC,QAAQC,IAAIF,yFAZpBG,KAAKX,2CAiBL,OACIY,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,8DArBcC,aCSdC,mLARR,OACIJ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,6DAJaC,8BCyCdE,0LAjCX,OACEL,EAAAC,EAAAC,cAACI,EAAA,EAAD,KACEN,EAAAC,EAAAC,cAAA,OAAKK,UAAU,aACbP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,gDACbP,EAAAC,EAAAC,cAAA,KAAGM,MAAM,eAAeC,KAAK,eAAeC,OAAO,UACjDV,EAAAC,EAAAC,cAAA,OAAKS,IAAKC,IAAMC,MAAM,KAAKC,OAAO,KAAKC,IAAI,0BAE7Cf,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMU,GAAG,IAAIT,UAAU,gBAAvB,uCACAP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,4BACbP,EAAAC,EAAAC,cAAA,MAAIK,UAAU,sBACZP,EAAAC,EAAAC,cAAA,MAAIK,UAAU,eACZP,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMU,GAAG,IAAIT,UAAU,YAAvB,WAEFP,EAAAC,EAAAC,cAAA,MAAIK,UAAU,eACZP,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMU,GAAG,SAAST,UAAU,YAA5B,cAMVP,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWjC,IACjCa,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,SAASC,UAAWhB,IACtCJ,EAAAC,EAAAC,cAAA,OAAKK,UAAU,aACbP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,cACbP,EAAAC,EAAAC,cAAA,mDA1BMC,cCEZkB,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DA6BN,SAASC,EAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACTjC,KAAK,SAAAqC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfR,UAAUC,cAAcQ,WAK1BzC,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,2CAMrByC,MAAM,SAAAC,GACL3C,QAAQ2C,MAAM,4CAA6CA,KChEjEC,IAASC,OAAO1C,EAAAC,EAAAC,cAACyC,EAAD,MAASC,SAASC,eAAe,SDclC,WACb,GAA6C,kBAAmBhB,UAAW,CAGzE,GADkB,IAAIiB,IAAIC,GAAwBxB,OAAOC,UAC3CwB,SAAWzB,OAAOC,SAASwB,OAIvC,OAGFzB,OAAO0B,iBAAiB,OAAQ,WAC9B,IAAMrB,EAAK,GAAAsB,OAAMH,GAAN,sBAEN1B,EAwCX,SAAiCO,GAE/BuB,MAAMvB,GACHjC,KAAK,SAAAyD,GAGkB,MAApBA,EAASC,SACuD,IAAhED,EAASE,QAAQC,IAAI,gBAAgBC,QAAQ,cAG7C3B,UAAUC,cAAc2B,MAAM9D,KAAK,SAAAqC,GACjCA,EAAa0B,aAAa/D,KAAK,WAC7B4B,OAAOC,SAASmC,aAKpBhC,EAAgBC,KAGnBW,MAAM,WACL1C,QAAQC,IACN,mEAzDA8D,CAAwBhC,GAHxBD,EAAgBC,MC7BxBiC","file":"static/js/main.732bb7be.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.495d93cc.svg\";","/* global $ */\r\nimport React, { Component } from 'react';\r\n\r\nclass SearchComponent extends Component {\r\n    componentDidMount() {\r\n        this.dbQuery();\r\n    }\r\n\r\n    dbQuery = () => {\r\n        $.ajax({\r\n            method: 'POST',\r\n            url: '/create-person',\r\n            data: {\r\n                name: 'John' // for example: push the value of an input to the server instead\r\n            },\r\n        })\r\n            .then(function(res) {\r\n                console.log(res);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p>I can seach books sometime in the future.</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchComponent;","import React, { Component } from 'react';\r\n\r\nclass SavedComponent extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p>I can display saved books in the future.</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n export default SavedComponent;","import React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport SearchComponent from \"./components/search.component.js\";\nimport SavedComponent from \"./components/saved.component.js\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"container\">\n          <nav className=\"navbar navbar-expand-lg navbar-dark bg-light\">\n            <a class=\"navbar-brand\" href=\"bookpic here\" target=\"_blank\">\n              <img src={logo} width=\"30\" height=\"30\" alt=\"Booksbooksbooksbooks\" />\n            </a>\n            <Link to=\"/\" className=\"navbar-brand\">MERN-Stack Book Search and Save App</Link>\n            <div className=\"collapse navbar-collapse\">\n              <ul className=\"navbar-nav mr-auto\">\n                <li className=\"navbar-item\">\n                  <Link to=\"/\" className=\"nav-link\">Search</Link>\n                </li>\n                <li className=\"navbar-item\">\n                  <Link to=\"/saved\" className=\"nav-link\">saved</Link>\n                </li>\n              </ul>\n            </div>\n          </nav>\n        </div>\n        <Route exact path=\"/\" component={SearchComponent} />\n        <Route exact path=\"/saved\" component={SavedComponent} />\n        <div className=\"container\">\n          <div className=\"App-header\">\n            <h2>Google Book Search and Save</h2>\n          </div>\n\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}